# Docker Compose לפיתוח מקומי
version: '3.8'

services:
  # Backend Service
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - FIREBASE_SERVICE_ACCOUNT=./serviceAccountKey.json
      - FRONTEND_URL=http://localhost:3000
      - LOG_LEVEL=debug
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - redis
    restart: unless-stopped

  # Frontend Service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:5000
      - REACT_APP_FIREBASE_API_KEY=${REACT_APP_FIREBASE_API_KEY}
      - REACT_APP_FIREBASE_AUTH_DOMAIN=${REACT_APP_FIREBASE_AUTH_DOMAIN}
      - REACT_APP_FIREBASE_PROJECT_ID=${REACT_APP_FIREBASE_PROJECT_ID}
      - REACT_APP_MAPBOX_TOKEN=${REACT_APP_MAPBOX_TOKEN}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

  # MCP Server
  mcp-server:
    build: ./mcp-server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
    volumes:
      - ./mcp-server:/app
      - /app/node_modules
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  redis_data:
